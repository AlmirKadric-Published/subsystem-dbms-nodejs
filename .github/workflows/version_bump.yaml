name: version_bump

on:
    # Trigger workflow on version tag push
    push:
        tags: [ 'v*' ]

    # Allows running this workflow manually from the Actions tab
    workflow_dispatch:
        inputs:
            target-ref:
                description: Version Tag
                required: true

jobs:
    ##
    # Setup project & cache dependencies
    ##
    deps:
        runs-on: ubuntu-latest
        steps:
            - name: '※ Prepare Node.js subsystem project dependencies'
              uses: catalyst-stack/github-actions/nodejs-subsystem-deps@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}

    ##
    # Run test suite in parallel
    ##
    test-lint:
        runs-on: ubuntu-latest
        needs: [deps]
        steps:
            - name: '※ Test lint'
              uses: catalyst-stack/github-actions/nodejs-subsystem-script@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}
                npm-script: test:lint

    test-types:
        runs-on: ubuntu-latest
        needs: [deps]
        steps:
            - name: '※ Test types'
              uses: catalyst-stack/github-actions/nodejs-subsystem-script@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}
                npm-script: test:types

    test-unit:
        runs-on: ubuntu-latest
        needs: [deps]
        steps:
            - name: '※ Test unit'
              uses: catalyst-stack/github-actions/nodejs-subsystem-script@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}
                npm-script: test:unit

    test-coverage:
        runs-on: ubuntu-latest
        needs: [deps]
        steps:
            - name: '※ Test coverage'
              uses: catalyst-stack/github-actions/nodejs-subsystem-script@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}
                npm-script: test:coverage

    ##
    # Create library bundle if tests pass
    ##
    bundle:
        runs-on: ubuntu-latest
        needs: [test-lint, test-types, test-unit, test-coverage]
        steps:
            - name: '※ Setup Node.js subsystem project'
              uses: catalyst-stack/github-actions/nodejs-subsystem-setup@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}

            - name: '※ Create bundle'
              run: npm run bundle

            - name: '※ Create docs'
              run: npm run docs

            - name: '※ Upload bundle job artifact'
              uses: actions/upload-artifact@v2
              with:
                name: bundle
                path: ./dist
                retention-days: 7

            - name: '※ Upload docs job artifact'
              uses: actions/upload-artifact@v2
              with:
                name: docs
                path: ./docs
                retention-days: 7

            - name: '※ Create release artifacts'
              run: |
                (cd ./dist && zip -r ./bundle.zip ./src)
                (cd ./docs && zip -r ./docs.zip ./*)

            - name: '※ Upload release artifacts'
              uses: ncipollo/release-action@v1
              with:
                # API token
                token: ${{ secrets.GITHUB_TOKEN }}
                # Only create a draft, we publish later on
                draft: true
                # Allow updates
                allowUpdates: true
                # Don't set a body and only set a name on creation, not update
                omitBody: true
                omitNameDuringUpdate: true
                # Artifacts to upload to the release
                artifacts: "./dist/bundle.zip,./docs/docs.zip"
                artifactErrorsFailBuild: true

    ##
    # Finally update github pages documentation for this version
    ##
    docs:
        runs-on: ubuntu-latest
        needs: [bundle]
        steps:
            - id: get-ref
              name: '※ Determine target git ref'
              uses: catalyst-stack/github-actions/input-or-ref-name@master
              with:
                target-ref: ${{ github.event.inputs.target-ref }}

            - name: '※ Checkout github pages branch'
              uses: actions/checkout@v2
              with:
                ref: 'gh-pages'

            - name: '※ Set @actions to git user for commits'
              uses: fregante/setup-git-user@v1

            - name: '※ Clean version docs'
              env:
                VERSION_TAG: ${{ steps.get-ref.outputs.ref-name }}
              run: |
                rm -rf ./${VERSION_TAG}
                # Fail-safe to make sure we didn't blow away all docs
                test -n "$(ls ./)" || exit 1

            - name: '※ Download docs job artifact'
              uses: actions/download-artifact@v2
              with:
                name: docs
                path: ./.

            - name: '※ Update "latest" symlink'
              run: |
                LATEST=$(npx semver $(ls .) | tail -n1)
                ln -sfn "v${LATEST}" "latest"

            - name: '※ Deploy github pages branch'
              run: |
                # Create temporary fresh branch
                git checkout --orphan gh-pages-tmp

                # Make new single commit with changes
                git add .
                git commit -m "single github pages commit"

                # Update gh-pages branch
                git branch -f gh-pages gh-pages-tmp
                git push -f origin gh-pages
